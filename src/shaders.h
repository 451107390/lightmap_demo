#pragma once

static const char *standard_vs =
"#version 330\n"
"\n"
"layout(location = 0) in vec3 Position;\n"
"layout(location = 1) in vec3 Normal;\n"
"layout(location = 2) in vec2 Texcoord;\n"
"layout(location = 3) in vec2 Texcoord2;\n"
"\n"
"uniform mat4 WVP;\n"
"uniform mat4 World;\n"
"\n"
"struct FragIn{\n"
"	vec3 pos;\n"
"	vec3 normal;\n"
"	vec2 texcoord;\n"
"	vec2 texcoord2;\n"
"};\n"
"\n"
"out FragIn fragin;\n"
"\n"
"void main(){\n"
"	gl_Position = WVP * vec4(Position, 1.0);\n"
"\n"
"	fragin.pos = (World * vec4(Position, 1.0)).xyz;\n"
"	fragin.normal = Normal;\n"
"	fragin.texcoord = Texcoord;\n"
"	fragin.texcoord2 = Texcoord2;\n"
"}\n";

static const char *standard_fs =
"#version 330\n"
"\n"
"#define PI 3.14159265358\n"
"#define ONE_OVER_PI 0.3183098861847\n"
"\n"
"struct FragIn{\n"
"    vec3 pos;\n"
"    vec3 normal;\n"
"    vec2 texcoord;\n"
"    vec2 texcoord2;\n"
"};\n"
"\n"
"in FragIn fragin;\n"
"\n"
"out vec4 FragColor;\n"
"\n"
"uniform bool isConstant;\n"
"uniform vec3 emission;\n"
"uniform vec3 diffuse;\n"
"uniform sampler2D texDiffuse;\n"
"uniform sampler2D texBake;\n"
"uniform int texBakeWidth;\n"
"uniform int texBakeHeight;\n"
"uniform vec3 cameraPos;\n"
"uniform bool showDiffuse;\n"
"uniform bool showLightmap;\n"
"\n"
"float gammaCorrect(float value){\n"
"    if (value <= 0.0031308f) return 12.92f * value;\n"
"    return 1.055f * pow(value, (1.f / 2.4f)) - 0.055f;\n"
"}\n"
"\n"
"bool isBlack(vec4 c){\n"
"    return (c.x == 0) && (c.y == 0) && (c.z == 0);\n"
"}\n"
"\n"
"void main(){\n"
"    if(emission.x != 0.f || emission.y != 0.f || emission.z != 0.f){\n"
"        FragColor = vec4(emission, 1);\n"
"        return;\n"
"    }\n"
"\n"
"    float invWidth = 1.f / texBakeWidth;\n"
"    float invHeight = 1.f / texBakeHeight;\n"
"    vec4 L = vec4(0.f);\n"
"    vec4 t = vec4(0.f);\n"
"    int count = 1;\n"
"	 L = texture(texBake, fragin.texcoord2);\n"
"   \n"
"    vec4 diff = vec4(0.f);\n"
"    if(isConstant)\n"
"        diff = vec4(diffuse, 1.f);\n"
"    else\n"
"		 diff = texture(texDiffuse, fragin.texcoord);\n"
"    if(diff.a < 0.3) discard;\n"
"    vec3 fr = diff.xyz * ONE_OVER_PI;\n"
"    vec3 ret = vec3(1.f);\n"
"    if(showDiffuse)\n"
"		 ret*=fr;\n"
"    if(showLightmap)\n"
"        ret*=L.xyz;\n"
"\n"
"    //filmic tonemap\n"
"    vec3 x = ret - vec3(0.004f);\n"
"    x.x = max(0, x.x);\n"
"    x.y = max(0, x.y);\n"
"    x.z = max(0, x.z);\n"
"    ret = (x*(6.2f*x + 0.5f)) / (x*(6.2f*x + 1.7f) + 0.06f);\n"
"    FragColor = vec4(ret, 1); \n"
"}\n";